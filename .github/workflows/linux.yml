name: linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm-cache

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Install CMake
      uses: ssrobins/install-cmake@v1
      with:
        version: 3.30.2
    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: freetype2 debuginfod dbus libdbus-1-dev libxinerama-dev libxkbcommon libglvnd meson git nodejs libx11-dev libxrandr-dev libxcursor-dev libxi-dev libgl1-mesa-dev libudev-dev libfreetype-dev libvorbis-dev libflac-dev
        version: 1.0
    - name: Install dependencies on ubuntu9
      run: |
        echo Update gcc-9 =======================================================================
        echo gcc version before
        gcc --version
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install ninja-build cmake gcc-9 g++-9
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
        echo gcc version after
        gcc --version
    - name: Trust git repo
      run: git config --global --add safe.directory '*'
    - uses: actions/checkout@v4
    - name: Profiler GUI
      run: |
        cmake -B profiler/build -S profiler -DCMAKE_BUILD_TYPE=Release -DLEGACY=ON -DGLFW_BUILD_WAYLAND=OFF -DGIT_REV=${{ github.sha }}
        cmake --build profiler/build --parallel
    - name: Update utility
      run: |
        cmake -B update/build -S update -DCMAKE_BUILD_TYPE=Release
        cmake --build update/build --parallel
    - name: Capture utility
      run: |
        cmake -B capture/build -S capture -DCMAKE_BUILD_TYPE=Release
        cmake --build capture/build --parallel
    - name: Csvexport utility
      run: |
        cmake -B csvexport/build -S csvexport -DCMAKE_BUILD_TYPE=Release
        cmake --build csvexport/build --parallel
    - name: Import utilities
      run: |
        cmake -B import/build -S import -DCMAKE_BUILD_TYPE=Release
        cmake --build import/build --parallel
    - name: Library
      run: meson setup -Dprefix=$GITHUB_WORKSPACE/bin/lib build && meson compile -C build && meson install -C build
    - name: Test application
      run: |
        # test compilation with different flags
        # we clean the build folder to reset cached variables between runs
        cmake -B test/build -S test -DCMAKE_BUILD_TYPE=Release
        cmake --build test/build --parallel
        rm -rf test/build

        # same with TRACY_ON_DEMAND
        cmake -B test/build -S test -DCMAKE_BUILD_TYPE=Release -DTRACY_ON_DEMAND=ON .
        cmake --build test/build --parallel
        rm -rf test/build

        # same with TRACY_DELAYED_INIT TRACY_MANUAL_LIFETIME
        cmake -B test/build -S test -DCMAKE_BUILD_TYPE=Release -DTRACY_DELAYED_INIT=ON -DTRACY_MANUAL_LIFETIME=ON .
        cmake --build test/build --parallel
        rm -rf test/build

        # same with TRACY_DEMANGLE
        cmake -B test/build -S test -DCMAKE_BUILD_TYPE=Release -DTRACY_DEMANGLE=ON .
        cmake --build test/build --parallel
        rm -rf test/build
    - name: Find Artifacts
      id: find_artifacts
      run: |
        mkdir -p bin
        cp profiler/build/tracy-profiler bin
        cp update/build/tracy-update bin
        cp capture/build/tracy-capture bin
        cp csvexport/build/tracy-csvexport bin
        cp import/build/tracy-import-chrome bin
        cp import/build/tracy-import-fuchsia bin
        strip bin/tracy-*
    - uses: actions/upload-artifact@v4
      with:
        name: ubuntu-focal
        path: bin
